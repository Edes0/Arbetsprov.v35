@page "/Data/Users"

@using DataAccessLibrary;
@using DataAccessLibrary.Models;

@inject IUserData _userData;

<h3>Users</h3>

<h4>Add new user</h4>

<EditForm Model = "@newUser" OnValidSubmit ="@InsertUser">

    <DataAnnotationsValidator /> 
    <ValidationSummary />

    <InputText id = "name" @bind-Value = "users.Name" />
    <InputText id = "username" @bind-Value = "users.UserName" />
    <InputText id = "password" @bind-Value = "users.Password" />
    <InputText id = "email" @bind-Value = "users.Email" />

    <button type = "submit" class = "btn  btn-primary">Submit</button>

</EditForm>


<h4>Active users</h4>
@if (users is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class ="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Username</th>
                <th>Password</th>
                <th>Email</th>
                <th>Confirmed</th>
                <th>Created</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {         
            <tr>
                <td>@user.Name</td>
                <td>@user.UserName</td>
                <td>@user.Password</td>
                <td>@user.Email</td>
                <td>@user.IsEmailConfirmed</td>
                <td>@user.CreatedDate</td>
            </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Users> users;
    private DisplayUserModel newUser = new DisplayUserModel();

    protected override Task OnInitializedAsync()
    {
        users = await _userData.GetUsers();
    }

    private void InsertUser()
    {
        UserModel u = new UserModel
            {
                Name = newUser.Name,
                UserName = newUser.UserName,
                Password = newUser.Password,
                Email = newUser.Email
            };


        await _userData.InsertUser(u);

        users.Add(u);
    }
}
